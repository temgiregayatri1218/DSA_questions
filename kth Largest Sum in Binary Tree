class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) 
    {
        vector<long long>ans;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int size = q.size();
            long long sum = 0;
            for(int i=0;i<size;i++)
            {
                TreeNode*temp = q.front();
                q.pop();
                sum += temp->val;
                if(temp->left)
                {
                    q.push(temp->left);
                }
                if(temp->right)
                {
                    q.push(temp->right);
                }
            }
            ans.push_back(sum);
        }
        sort(ans.begin(),ans.end());

        if(ans.size() < k)
        {
            return -1;
        }
        int n = ans.size();
        return ans[n-k];

        
    }
};
