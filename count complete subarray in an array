class Solution {
public:
    int countCompleteSubarrays(vector<int>& nums) 
    {
        unordered_map<int,int>mmp;
        unordered_map<int,int>sp;
        set<int>st;
        for(auto x:nums)
        {
            mmp[x]=1;
            st.insert(x);
        }
        int i=0;
        int j=0;
        int cnt=0;
        int n = nums.size();
        int limit = mmp.size();
        for(int i=0;i<n;i++)
        {
            j = i;
            set<int>ans;
            for(int j=i;j<n;j++)
            {
                ans.insert(nums[j]);
                if(ans==st)
                    cnt++;

                // sp = mmp;
                // for(int k =i;k<=j;k++)
                // {
                //     sp[nums[k]]--;
                // }
                // int flag =0;
                // for(auto x:sp)
                // {
                //     if(x.second>0)
                //     {
                //         flag =1;
                //         break;
                //     }
                // }
                // if(flag==0)
                // {
                //     cnt+= n-j;
                //     break;
                // }
                // // j++;
               
            }
            // i++;
        }
        return cnt;
    }
};
